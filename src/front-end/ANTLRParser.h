/**
 * @file   ANTLRParser.h
 * @author Christopher Maier (cmaier@student.tugraz.at)
 * @date   January 2015
 *
 * Handles antlr parsing of YAGI code, i.e. encapsulates native C parsing code
 * into a C++ class.
 */

/*
 This file is part of YAGI.

 YAGI is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 3.0 of the License, or (at your option) any later version.

 YAGI is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with YAGI.
*/


#ifndef ANTLRPARSER_H_
#define ANTLRPARSER_H_

#include <memory>
#include <string>

#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>
#include <streambuf>
#include <type_traits>
#include <functional>

#include "../common/ASTNodeTypes/ASTNodeBase.h"
#include "autoGenerated/YAGILexer.h"
#include "autoGenerated/YAGIParser.h"
#include "autoGenerated/YAGITreeWalker.h"
#include "astClasses/ASTBuilder.h"

/**
 * C++ wrapper class that handles the parsing of YAGI code.
 */
class ANTLRParser
{
  private:
    /**
     * Default ctor
     */
    ANTLRParser();

    /**
     * Default dtor
     */
    virtual ~ANTLRParser();

    /**
     * Helper method for parsing the native ANTLR input stream data.
     * @param input The ANTLR input data.
     * @param printCAST True if the C AST should be printed.
     * @return C++ representation of the AST.
     */
    static std::shared_ptr<ASTNodeBase<>> parse(const pANTLR3_INPUT_STREAM& input, bool printCAST =
    false);

  public:
    /**
     * Parses YAGI code and returns the corresponding AST.
     * @param yagiCode The YAGI code to be parsed.
     * @param printCAST True if the C AST should be printed.
     * @return C++ representation of the AST.
     */
    static std::shared_ptr<ASTNodeBase<>> parseYAGICodeFromText(const std::string& yagiCode,
        bool printCAST = false);

    /**
     * Parses YAGI code given a YAGI source file name.
     * @param file The name of the source file.
     * @param printCAST True if the C AST should be printed.
     * @return C++ representation of the AST.
     */
    static std::shared_ptr<ASTNodeBase<>> parseYAGICodeFromFile(const std::string& file,
        bool printCAST = false);
};

#endif /* ANTLRPARSER_H_ */
